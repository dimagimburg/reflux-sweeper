{"version":3,"sources":["../../src/Components/ScoreBoard.js"],"names":[],"mappings":";;;;;;;;8BAAoB,oBAAoB;;;;+BAClB,qBAAqB;;;;AAE3C,IAAI,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE/B,mBAAe,EAAA,2BAAE;AACb,eAAO,6BAAU,OAAO,EAAE,CAAC;KAC9B;;AAED,qBAAiB,EAAA,6BAAG;AAChB,YAAI,CAAC,WAAW,GAAG,6BAAU,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtD;;AAED,wBAAoB,EAAA,gCAAG;AACnB,YAAI,CAAC,UAAU,EAAE,CAAC;KACrB;;AAED,YAAQ,EAAA,kBAAC,IAAI,EAAC;AACV,YAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KACvB;;AAED,WAAO,EAAA,mBAAE;AACL,oCAAQ,OAAO,EAAE,CAAC;KACrB;;AAED,iBAAa,EAAA,yBAAG;AACZ,oCAAQ,aAAa,EAAE,CAAC;KAC3B;;AAED,iBAAa,EAAA,yBAAG;AACZ,oCAAQ,aAAa,EAAE,CAAC;KAC3B;;AAED,eAAW,EAAA,qBAAC,CAAC,EAAE;AACX,oCAAQ,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACvC;;AAED,eAAW,EAAA,qBAAC,CAAC,EAAE;AACX,oCAAQ,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACvC;;AAED,UAAM,EAAA,kBAAG;AACL,eACI;;;YACI;;;;gBAAS,6BAAU,QAAQ;;gBAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAK,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,kBAAkB,GAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,GAAG,YAAY,AAAC;aAAO;YACxK;;;;gBACuB,+BAAO,EAAE,EAAC,MAAM,EAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,AAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,AAAC,GAAG;;gBAAC,+BAAK;;gBAC9F,+BAAO,EAAE,EAAC,MAAM,EAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,AAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,AAAC,GAAG;;gBAAC,+BAAK;;gBAC5F,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;;gBAAE,+BAAK;;gBAC3C,6BAAK,SAAS,EAAC,WAAW,EAAC,GAAG,EAAE,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,AAAC,GAAE;;gBAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;;;oBAAM;;0BAAQ,OAAO,EAAE,IAAI,CAAC,aAAa,AAAC;;qBAAW;oBAAA;;0BAAQ,OAAO,EAAE,IAAI,CAAC,aAAa,AAAC;;qBAAW;iBAAO,GAAG,EAAE;;gBAAE,+BAAM;;gBACxN,IAAI,CAAC,KAAK,CAAC,KAAK;;gBAAE,+BAAM;;gBACf,IAAI,CAAC,KAAK,CAAC,KAAK;aACzC;YACN;;;gBACI;;sBAAQ,OAAO,EAAE,IAAI,CAAC,OAAO,AAAC;;iBAAkB;aAC9C;SACJ,CACR;KACL;CACJ,CAAC,CAAC;;qBAEY,UAAU","file":"ScoreBoard.js","sourcesContent":["import Actions from '../Actions/Actions';\r\nimport GameStore from '../Stores/GameStore';\r\n\r\nlet ScoreBoard = React.createClass({\r\n\r\n    getInitialState(){\r\n        return GameStore.getGame();\r\n    },\r\n\r\n    componentDidMount() {\r\n        this.unsubscribe = GameStore.listen(this.onChange);\r\n    },\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscibe();\r\n    },\r\n\r\n    onChange(game){\r\n        this.setState(game);\r\n    },\r\n\r\n    newGame(){\r\n        Actions.newGame();\r\n    },\r\n\r\n    increaseLevel() {\r\n        Actions.increaseLevel();\r\n    },\r\n\r\n    decreaseLevel() {\r\n        Actions.decreaseLevel();\r\n    },\r\n\r\n    colsChanged(e) {\r\n        Actions.colsChanged(e.target.value);\r\n    },\r\n\r\n    rowsChanged(e) {\r\n        Actions.rowsChanged(e.target.value);\r\n    },\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>Hi {GameStore.username}, {this.state.gameOver &&  this.state.win ? 'You are TIGGER!!' : (this.state.gameOver &&  !this.state.win ? 'LOSER!!' : 'GOOD LUCK!')}</div>\r\n                <div>\r\n                    Number of columns: <input id=\"cols\" type=\"number\" value={this.state.cols} onChange={this.colsChanged} /> <br/>\r\n                    Number of rows: <input id=\"rows\" type=\"number\" value={this.state.rows} onChange={this.rowsChanged} /> <br/>\r\n                    Number tiles: {this.state.cols * this.state.rows} <br/>\r\n                    Game Level: <img className=\"level-img\" src={'/images/level-' + this.state.level + '.png'}/> {!this.state.gameOn ? <span><button onClick={this.increaseLevel}>+</button><button onClick={this.decreaseLevel}>-</button></span> : ''},<br />\r\n                    Number of mines: {this.state.mines},<br />\r\n                    Number of Flags remained: {this.state.flags}\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.newGame}>New Game</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nexport default ScoreBoard;"]}