{"version":3,"sources":["../../src/Views/GameBoard.js"],"names":[],"mappings":";;;;;;;;mCAAyB,yBAAyB;;;;gCAC3B,sBAAsB;;;;oCACtB,4BAA4B;;;;qBAC7B,UAAU;;;;AAEhC,SAAS,QAAQ,GAAG;AAChB,WAAO;AACH,aAAK,EAAE,8BAAW,QAAQ,EAAE;KAC/B,CAAC;CACL;;AAED,IAAI,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE9B,mBAAe,EAAA,2BAAG;AACd,eAAO,QAAQ,EAAE,CAAC;KACrB;;AAED,qBAAiB,EAAA,6BAAG;AAChB,YAAI,CAAC,WAAW,GAAG,8BAAW,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC5D;;AAED,wBAAoB,EAAA,gCAAG;AACnB,YAAI,CAAC,WAAW,EAAE,CAAC;KACtB;;AAED,yBAAqB,EAAE,+BAAS,SAAS,EAAC,SAAS,EAAC;;AAChD,eAAO,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;KAC/C;;AAED,iBAAa,EAAA,uBAAC,KAAK,EAAE;AACjB,eAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACpB,YAAI,CAAC,QAAQ,CAAC;AACV,iBAAK,EAAG,KAAK;SAChB,CAAC,CAAC;KACN;;AAED,UAAM,EAAA,kBAAG;AACL,eAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAC5B,eACI;;;YAEQ,mBACK,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAC,EAAE,CAAC,CAC9C,IAAI,EAAE,CACN,GAAG,CAAC,UAAS,CAAC,EAAC;AACZ,uBACI;;;oBAEQ,CAAC,CAAC,GAAG,CAAC,UAAS,KAAK,EAAC;AACjB,+BAAO,yDAAY,EAAE,EAAE,KAAK,CAAC,EAAE,AAAC,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,AAAC,EAAC,UAAU,EAAE,KAAK,CAAC,UAAU,AAAC,EAAC,WAAW,EAAE,KAAK,CAAC,WAAW,AAAC,GAAG,CAAC;qBAC3H,CAAC;iBAEJ,CACR;aACL,CAAC;SAER,CACR;KACL;CACJ,CAAC,CAAC;;qBAEY,SAAS","file":"GameBoard.js","sourcesContent":["import BoardActions from '../Actions/BoardActions';\r\nimport BoardStore from '../Stores/BoardStore';\r\nimport BoardPiece from './../Components/BoardPiece';\r\nimport Utilities from '../Utils';\r\n\r\nfunction getBoard() {\r\n    return {\r\n        board: BoardStore.getBoard()\r\n    };\r\n}\r\n\r\nlet GameBoard = React.createClass({\r\n\r\n    getInitialState() {\r\n        return getBoard();\r\n    },\r\n\r\n    componentDidMount() {\r\n        this.unsubscribe = BoardStore.listen(this.onBoardChange);\r\n    },\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribe();\r\n    },\r\n\r\n    shouldComponentUpdate: function(nextProps,nextState){ // vs this.props && this.state\r\n        return nextState.board !== this.state.board;\r\n    },\r\n\r\n    onBoardChange(board) {\r\n        console.log('here');\r\n        this.setState({\r\n            board : board\r\n        });\r\n    },\r\n\r\n    render() {\r\n        console.log('render board');\r\n        return (\r\n            <div>\r\n                {\r\n                    Utilities\r\n                        .createBoardTwoDimensional(this.state.board,30)\r\n                        .toJS()\r\n                        .map(function(a){\r\n                            return (\r\n                                <div>\r\n                                    {\r\n                                        a.map(function(piece){\r\n                                            return <BoardPiece id={piece.id} isMine={piece.isMine} isRevealed={piece.isRevealed} minesAround={piece.minesAround} />;\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            );\r\n                        })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nexport default GameBoard;"]}